<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.WeChatApi.dao.businessMapper">
	<resultMap id="BaseResultMap" type="com.WeChatApi.bean.models.userStore">
		<id column="su_id"  property="suId" jdbcType="INTEGER" />
		<result column="mch_appid" property="mchAppId" jdbcType="VARCHAR" />
		<result column="su_name" property="suName" jdbcType="VARCHAR"/>
		<result column="su_fullname" property="suFullName" jdbcType="VARCHAR"/>
		<result column="su_mobile" property="suMobile" jdbcType="VARCHAR"/>
		<result column="su_idcard" property="suIdCard" jdbcType="VARCHAR"/>
		<result column="su_password" property="suPassword" jdbcType="VARCHAR"/>
		<result column="su_balances" property="suBalances" jdbcType="INTEGER"/>
		<result column="su_point" property="suPoint" jdbcType="INTEGER"/>
		<result column="su_park_code" property="suParkCode" jdbcType="VARCHAR"/>
		<result column="su_create_time" property="suCreateTime" jdbcType="VARCHAR"/>
		<result column="su_disabled_time" property="suDisabledTime" jdbcType="VARCHAR"/>
		<result column="su_session" property="suSession" jdbcType="VARCHAR"/>
		<result column="su_session_expire" property="suSessionExpire" jdbcType="VARCHAR"/>
		<result column="su_lastlogin_ipaddr" property="suLastloginIpaddr" jdbcType="VARCHAR"/>
		<result column="su_lastlogin_time" property="suLastloginTime" jdbcType="VARCHAR"/>
		<result column="su_status" property="suStatus" jdbcType="INTEGER"/>
		<result column="is_bind" property="isBind" jdbcType="INTEGER"/>
		<result column="su_type" property="suType" jdbcType="INTEGER"/>
		<result column="su_coupon_limit_time" property="suCouponLimitTime" jdbcType="INTEGER"/>
		<result column="su_point_limit_time" property="suPointLimitTime" jdbcType="INTEGER"/>
		<!-- <result column="is_bind" property="suPointLimit" jdbcType="VARCHAR"/> -->
		<result column="su_point_expire_time" property="suPointExpireTime" jdbcType="INTEGER"/>
		<result column="su_park_name" property="suParkName" jdbcType="INTEGER"/>
		<result column="su_coupon_limit" property="suCouponLimit" jdbcType="VARCHAR"/>
	</resultMap>

	<sql id="Base_Column_List">
		su_id,mch_appid,su_name,su_fullname,su_mobile,su_idcard,su_password,su_balances,su_point,su_park_code,su_create_time,su_disabled_time,su_session,su_session_expire,su_lastlogin_ipaddr,su_lastlogin_time,su_status,is_bind,su_type,su_coupon_limit_time,su_point_limit_time,su_coupon_limit,su_point_expire_time,su_park_name
	</sql>

	<update id="changeUserStoreIsBindBy">
		update store_user
		set is_bind =1
		where 
         su_id= #{suId}
	</update>
	

	<select id="findUserStoreByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
	select
		<include refid="Base_Column_List" />
		from store_user
		where 1 = 1
		and su_name = #{userName} and su_password = #{mdPassword}
	</select>
	
	<select id="findUserStoreBySuId" resultMap="BaseResultMap">
	select
		<include refid="Base_Column_List" />
		from store_user
		where 1 = 1
		and su_id = #{storeId} 
	</select>
	
	<update id="updatePriceByUserStoreDto" parameterType="com.WeChatApi.bean.dto.userStoreDto">
		update store_user
		<set>
			<if test="suBalances != null">
				su_balances = #{suBalances},
				su_point_expire_time = DATE_ADD(now(), interval su_point_limit_time day),
			</if>
			<if test="suPoint != null">
				su_point = #{suPoint},
			</if>
		</set>
		where 
       1=1 
         <if test="suId != null">
			and su_id = #{suId}
		</if>
	</update>
	
	
	
	<insert id="insertStoreCouponInfoByDto" parameterType="com.WeChatApi.bean.dto.businessCouponDto" useGeneratedKeys="true"
        keyProperty="c_id">
	insert into store_coupon
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="c_title != null">
				c_title,
			</if>
			<if test="store_id != null">
				store_id,
			</if>
			<if test="c_amount != null">
				c_amount,
			</if>
			<if test="c_count != null">
				c_count,
			</if>
			<if test="c_count_received != null">
				c_count_received,
			</if>
			<if test="c_balances != null">
				c_balances,
			</if>
			<if test="c_point != null">
				c_point,
			</if>
			<if test="c_start_time != null">
				c_start_time,
			</if>
			<if test="c_end_time != null">
				c_end_time,
			</if>
			<if test="c_status != null">
				c_status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="c_title != null">
				#{c_title,jdbcType=VARCHAR},
			</if>
			<if test="store_id != null">
				#{store_id},
			</if>
			<if test="c_amount != null">
				#{c_amount},
			</if>
			<if test="c_count != null">
				#{c_count},
			</if>
			<if test="c_count_received != null">
				#{c_count_received},
			</if>
			<if test="c_balances != null">
				#{c_balances},
			</if>
			<if test="c_point != null">
				#{c_point},
			</if>
			<if test="c_start_time != null">
				#{c_start_time},
			</if>
			<if test="c_end_time != null">
				#{c_end_time},
			</if>
			<if test="c_status != null">
				#{c_status},
			</if>
		</trim>
	</insert>
	
	<!-- 查询store_coupon的条件参数 -->
	<sql id="storeCouponConditions">
		<if test="storeId != null">
			and store_id = #{storeId}
		</if>
		<if test="cTitle != null and cTitle != ''">
			and c_title = #{cTitle}
		</if>
		<if test="cStatus != null">
			and c_status = #{cStatus}
		</if>
		<if test="cStartTime != null and cStartTime != ''">
			and c_start_time &gt;= #{cStartTime} and c_start_time &lt;= #{cEndTime}
		</if>
		<!-- <if test="cEndTime != null and cEndTime != ''">
			
		</if> -->
	</sql>
	
	
	<select id="findStoreCouponByCondition" 
		parameterType="com.WeChatApi.bean.condition.businessCouponCondition" resultType="com.WeChatApi.bean.dto.businessCouponDto">
	select
		*
		from store_coupon
		where 1 = 1
		 AND c_count-c_count_received != 0
		<include refid="storeCouponConditions" />
		order by c_start_time desc
		<if test="pageNo != null and limit != null">
			limit ${(pageNo -1 ) * limit}, ${limit}
		</if>
	</select>
	
	<select id="findStoreCouponCountByCondition" resultType="java.lang.Long" parameterType="com.WeChatApi.bean.condition.businessCouponCondition" >
		select
			count(0)
		from
			store_coupon
		where
			1 = 1
			 AND c_count-c_count_received != 0
		<include refid="storeCouponConditions" />
	</select>
	
	
	<select id="findBusinessCouponByCid" resultType="com.WeChatApi.bean.dto.businessCouponDto">
	select
		*
		from store_coupon where c_id=#{c_id}
	</select>
	
	
	<update id="updateStoreCouponStatusBycId">
		update store_coupon
		set c_status = 2,c_is_balance = 2
		where 
         c_id= #{getcId}
	</update>
	
	
	
	<select id="findStoreDiscountByCondition" resultType="java.util.Map"  >
	
	SELECT scd_id,scd_title,scd_type,scd_discount,scd_condition_amount,scd_present_amount,date_format(scd_effective_time,'%Y-%m-%d %H:%i:%s') as scd_effective_time,date_format(scd_expire_time,'%Y-%m-%d %H:%i:%s') as scd_expire_time,scd_status from store_charge_discount
	
	where  scd_status=1
	
	</select>
	
	
	<select id="findStoreDiscountByStoreId" resultType="java.util.Map"  >
	
	SELECT scd_id,scd_title,scd_store_id,scd_type,scd_discount,scd_condition_amount,scd_present_amount,date_format(scd_effective_time,'%Y-%m-%d %H:%i:%s') as scd_effective_time,date_format(scd_expire_time,'%Y-%m-%d %H:%i:%s') as scd_expire_time,scd_status from store_charge_discount
	
	where  scd_status=1 and (scd_store_id = 0 
	
	<if test="storeId != null and storeId != ''">
			or scd_store_id = #{storeId}
		</if>
	)
	</select>
	
	<select id="findStoreDiscountByScdId" resultType="com.WeChatApi.bean.dto.storeChargeDiscountDto"  >
	
	SELECT scd_id,scd_title,scd_type,scd_discount,scd_condition_amount,scd_present_amount,date_format(scd_effective_time,'%Y-%m-%d %H:%i:%s') as scd_effective_time,date_format(scd_expire_time,'%Y-%m-%d %H:%i:%s') as scd_expire_time,scd_status from store_charge_discount
	
	where  scd_status=1 and scd_id= #{scdId}
	
	</select>
	
	<insert id="insertChargePayLog" parameterType="java.lang.String">
	
		insert into store_charge_pay_log (log_txt, charge_record_id, log_type,
		log_datetime
		)
		values (#{logTxt,jdbcType=VARCHAR}, #{chargeRecordId,jdbcType=VARCHAR},
		#{logType,jdbcType=VARCHAR},
		NOW()
		)
	</insert>
	
	<insert id="insertUserChargePayLog" parameterType="java.lang.String">
	
		insert into user_charge_pay_log (log_txt, charge_record_id, log_type,
		log_datetime
		)
		values (#{logTxt,jdbcType=VARCHAR}, #{chargeRecordId,jdbcType=VARCHAR},
		#{logType,jdbcType=VARCHAR},
		NOW()
		)
	</insert>
	

	<select id="findChargeRecordByRid" resultType="com.WeChatApi.bean.dto.userChargeRecordDto"  >
	
	SELECT * from user_charge_record
	
	where  r_id = #{recordId}
	
	</select>
	
	<select id="findStoreChargeRecordByRid" resultType="com.WeChatApi.bean.dto.storeChargeRecordDto"  >
	
	SELECT * from store_charge_record
	
	where  r_id = #{recordId} and r_status = 0 
	
	</select>
	
	<update id="updateChargeRecordStatus">
		update user_charge_record
		set r_status = #{status}
		where 
         r_id= #{recordId}
	</update>
	
	<update id="updateStoreChargeRecordStatus">
		update store_charge_record
		set r_status = #{status}
		where 
         r_id= #{recordId}
	</update>
	
	<insert id="insertChargeRecord" parameterType="com.WeChatApi.bean.dto.userChargeRecordDto" useGeneratedKeys="true"
        keyProperty="r_id">
	
		insert into user_charge_record (r_user_id, r_type, r_discount_id,
		r_balances,r_point,r_time
		)
		values (#{r_user_id}, #{r_type},#{r_discount_id},#{r_balances},#{r_point},
		
		NOW()
		)
	</insert>
	
	
	<insert id="insertChargeRecord_addWechatUserPoint" parameterType="com.WeChatApi.bean.dto.userChargeRecordDto" 
        >
	
		insert into user_charge_record (r_user_id, r_type, r_discount_id,
		r_balances,r_point,r_time,r_status,r_left_point
		)
		values (#{r_user_id}, #{r_type},#{r_discount_id},#{r_balances},#{r_point},
		
		NOW(),#{r_status},#{r_point}
		)
	</insert>
	
	
	
	<insert id="insertChargeRecord_cashOut" parameterType="com.WeChatApi.bean.dto.userChargeRecordDto" useGeneratedKeys="true"
        keyProperty="r_id">
	
		insert into user_charge_record (r_user_id, r_type, r_discount_id,r_out_trade_no,
		r_balances,r_point,r_left_balances,r_left_point,r_time
		)
		values (#{r_user_id}, #{r_type},#{r_discount_id},#{r_out_trade_no},#{r_balances},#{r_point},#{r_left_balances},#{r_left_point},
		
		NOW()
		)
	</insert>
	
	
	<insert id="insertStoreChargeRecord" parameterType="com.WeChatApi.bean.dto.storeChargeRecordDto" useGeneratedKeys="true"
        keyProperty="r_id">
	
		insert into store_charge_record (r_store_id, r_type, r_discount_id,
		r_balances,r_point,r_time,charge_channel
		)
		values (#{r_store_id}, #{r_type},#{r_discount_id},#{r_balances},#{r_point},
		
		NOW(),#{charge_channel}
		)
	</insert>
	
	<insert id="inserStoreChargeRecord">
	
		insert into store_charge_record (r_store_id, r_type, r_discount_id,
		r_balances,r_point,r_time
		)
		values (#{storeId},#{type},#{scdId},#{r_balances},#{r_point},
		NOW()
		)
	</insert>
	
	
	<insert id="insertPayRefund" parameterType="com.WeChatApi.bean.dto.refundDto" useGeneratedKeys="true"
        keyProperty="rId">
	insert into parkinglots_pay_refund
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="payId != null">
				r_pay_id,
			</if>
			<if test="outRefundNo != null">
				out_refund_no,
			</if>
			<if test="refundFee != null">
				refund_fee,
			</if>
			<if test="refundId != null">
				refund_id,
			</if>
			<if test="refundAdminId != null">
				refund_admin_id,
			</if>
			refund_status,
			refund_time
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="payId != null">
				#{payId},
			</if>
			<if test="outRefundNo != null">
				#{outRefundNo},
			</if>
			<if test="refundFee != null">
				#{refundFee},
			</if>
			<if test="refundId != null">
				#{refundId},
			</if>
			<if test="refundAdminId != null">
				#{refundAdminId},
			</if>
			1,
			now()
		</trim>
	</insert>
	
	
	<insert id="insertPayRefund_success" parameterType="com.WeChatApi.bean.dto.refundDto" useGeneratedKeys="true"
        keyProperty="rId">
	insert into parkinglots_pay_refund
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="payId != null">
				r_pay_id,
			</if>
			<if test="outRefundNo != null">
				out_refund_no,
			</if>
			<if test="refundFee != null">
				refund_fee,
			</if>
			<if test="refundId != null">
				refund_id,
			</if>
			<if test="refundAdminId != null">
				refund_admin_id,
			</if>
			refund_status,
			refund_time
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="payId != null">
				#{payId},
			</if>
			<if test="outRefundNo != null">
				#{outRefundNo},
			</if>
			<if test="refundFee != null">
				#{refundFee},
			</if>
			<if test="refundId != null">
				#{refundId},
			</if>
			<if test="refundAdminId != null">
				#{refundAdminId},
			</if>
			2,
			now()
		</trim>
	</insert>
	
	
	<insert id="intsertPayRefundLog">
	insert into parkinglots_pay_refund_log (log_txt, pay_refund_id, log_datetime
		)
		values (#{logTxt},#{rId},
		NOW()
		)
	</insert>
	
	<select id="findRefundDtoByOutNo" resultType="com.WeChatApi.bean.models.parkinglotsPayRefund" parameterType="java.lang.String">
	
	SELECT * from parkinglots_pay_refund
	
	where  out_refund_no = #{outTradeNo}
	
	</select>
	
	
	<update id="updatePayRefundByOutNo">
		update parkinglots_pay_refund
		set refund_id = #{refundId},refund_status = 2,last_update_time = now()
		where 
         out_refund_no= #{outTradeNo}
	</update>
	
	
	<select id="findParkingLotsPayInfoByPayId" resultType="com.WeChatApi.bean.models.parkinglotsPay">
	
	SELECT * from parkinglots_pay
	
	where  pay_id = #{payId}
	
	</select>
	
	<update id="updateParkingLotsPayRefundAmountByPayId">
		update parkinglots_pay
		set refund_amount = #{sumRefundFee}
		where 
          pay_id = #{payId}
	</update>
	
	
	<update id="setStoreCouponUnused">
		UPDATE store_coupon SET c_status = 2 WHERE  c_id IN (SELECT * FROM (SELECT c_id FROM store_coupon  WHERE  c_end_time &lt;= NOW() AND c_status =1)  t)
	</update>
	
	
	<!-- 查询user_charge_record的条件参数 -->
	<sql id="userChargeRecordConditions">
		<if test="r_store_id != null">
			and r_store_id = #{r_store_id}
		</if>
		<if test="r_type != null ">
			and r_type = #{r_type}
		</if>
		<if test="r_status != null">
			and r_status = #{r_status}
		</if>
		<if test="start_time != null and start_time != ''">
			and r_time &gt;= #{start_time}
		</if>
		<if test="end_time != null and end_time != ''">
			and r_time &lt;= #{end_time}
		</if>
	</sql>
	
	
	<select id="findUserChargeInfoByCondition" 
		parameterType="com.WeChatApi.bean.condition.storeChargeRecordCondition" resultType="com.WeChatApi.bean.dto.storeChargeRecordDto">
	select
		*
		from store_charge_record
		where 1 = 1
		and r_status = 1
		<include refid="userChargeRecordConditions" />
		order by r_time desc
		<if test="pageNo != null and limit != null">
			limit ${(pageNo -1 ) * limit}, ${limit}
		</if>
	</select>
	
	<select id="findUserChargeCountByCondition" resultType="java.lang.Long" parameterType="com.WeChatApi.bean.condition.storeChargeRecordCondition" >
		select
			count(0)
		from
			store_charge_record
		where
			1 = 1
			and r_status = 1
		<include refid="userChargeRecordConditions" />
	</select>
	
	<insert id="insertStoreCouponRecordDtoByList" parameterType="java.util.List">
    insert into
    store_coupon_record(r_coupon_id,r_coupon_code,r_amount,r_park_code,r_park_name,r_start_time,r_end_time)
    values
    <foreach collection="list" item="item" index="index" separator="," >
        (#{item.r_coupon_id},#{item.r_coupon_code},#{item.r_amount},#{item.r_park_code},#{item.r_park_name},#{item.r_start_time},#{item.r_end_time})
    </foreach>
</insert>



<select id="findUserStoreByPhone" resultMap="BaseResultMap" parameterType="java.lang.String">
	select
		<include refid="Base_Column_List" />
		from store_user
		where 1 = 1
		and su_id  IN (SELECT bm_store_id FROM shore_bind_mobile  WHERE bm_mobile = #{userMobile}  AND  bm_status=1)
	</select>
	
	<insert id="insertUserRechargeRecordByDto" parameterType="com.WeChatApi.bean.dto.userRechargeRecordDto">
	insert into user_recharge_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userChargeRId != null">
				userChargeRId,
			</if>
			<if test="userId != null">
				userId,
			</if>
			<if test="outTradeNo != null">
				outTradeNo,
			</if>
			<if test="balances != null">
				balances,
			</if>
			<if test="status != null">
				status,
			</if>
			userTime,
			unUserTime,
			creatTime
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userChargeRId != null">
				#{userChargeRId},
			</if>
			<if test="userId != null">
				#{userId},
			</if>
			<if test="outTradeNo != null">
				#{outTradeNo},
			</if>
			<if test="balances != null">
				#{balances},
			</if>
			<if test="status != null">
				#{status},
			</if>
			CURDATE(),
			ADDDATE(CURDATE(),INTERVAL  1 YEAR),
			now()
		</trim>
	</insert>

<!-- <update id="updateUserReChargeRecord">
update user_recharge_record
		set cashOutBalances = #{refundFee},callBackStatus = 1,updateTime=now()
		where 
          outTradeNo = #{outTradeNo}
</update> -->

<update id="updateUserReChargeRecord">
UPDATE user_charge_record a
INNER JOIN user_recharge_record b ON b.outTradeNo = a.r_out_trade_no
SET a.r_status = 1,
 b.callBackStatus = 1,
 b.cashOutBalances = #{refundFee} ,
 b.updateTime=now()
 where 
          b.outTradeNo = #{outTradeNo}
</update>


<select id="findUseRechargeRecordByUserId" resultType="com.WeChatApi.bean.dto.userRechargeRecordDto"  >
	
	SELECT * from user_recharge_record
	
	where  unUserTime &gt;= CURDATE()  and userId= #{userId} and callBackStatus != 1
	
	</select>


<select id="findRoadRefundDtoByOutNo" resultType="com.WeChatApi.bean.models.parkinglotsPayRefund" parameterType="java.lang.String">
	
	SELECT * from road_parkinglots_pay_refund
	
	where  out_refund_no = #{outRefundNo}
	
	</select>
	
	<update id="updateRoadPayRefundByOutNo">
		update road_parkinglots_pay_refund
		set refund_id = #{refundId},refund_status = 2,last_update_time = now()
		where 
         out_refund_no= #{outRefundNo}
	</update>
	
	
	<select id="findUserRechargeRecordCountByOutTradeNo" resultType="java.lang.Long" parameterType="java.lang.String" >
		select
			count(0)
		from
			user_recharge_record 
		where
		 
			outTradeNo= #{outTradeNo}
	</select>
	
	
	<select id="findStoreChargePayLogCount" resultType="java.lang.Long" parameterType="java.lang.String" >
		select
			count(0)
		from
			store_charge_pay_log 
		where
		 
			charge_record_id= #{recordId}
	</select>
	
	
		<update id="updateChargeRecordRLeft">
		update user_charge_record
		set r_left_balances = #{newBalances},r_left_point = #{newPoint}
		where 
         r_id= #{recordId}
	</update>

</mapper>